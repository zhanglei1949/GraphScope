set(FLEX_POSTGRES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../third_party/postgres)
set(FLEX_POSTGRES_SRC_DIR ${FLEX_POSTGRES_DIR}/src)
set(FLEX_POSTGRES_BACKEND_SRC_DIR ${FLEX_POSTGRES_SRC_DIR}/backend)
set(FLEX_POSTGRES_BACKEND_REPLICATION_SRC_DIR ${FLEX_POSTGRES_BACKEND_SRC_DIR}/replication)
set(FLEX_POSTGRES_BACKEND_POSTMASTER_SRC_DIR ${FLEX_POSTGRES_BACKEND_SRC_DIR}/postmaster)
set(FLEX_POSTGRES_BACKEND_ACCESS_SRC_DIR ${FLEX_POSTGRES_BACKEND_SRC_DIR}/access)
set(FLEX_POSTGRES_BACKEND_STORAGE_SRC_DIR ${FLEX_POSTGRES_BACKEND_SRC_DIR}/storage)
set(FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR ${FLEX_POSTGRES_BACKEND_SRC_DIR}/utils)
include_directories(${FLEX_POSTGRES_SRC_DIR}/include)
include_directories(${FLEX_POSTGRES_SRC_DIR}/interfaces/libpq)
file(GLOB_RECURSE FLEX_POSTGRES_SRCS "${FLEX_POSTGRES_BACKEND_REPLICATION_SRC_DIR}/*.c")
# remove all files under ${FLEX_POSTGRES_BACKEND_REPLICATION_SRC_DIR}/pgoutput/
file(GLOB FLEX_POSTGRES_REPLICATION_PGOUTPUT_SRCS "${FLEX_POSTGRES_BACKEND_REPLICATION_SRC_DIR}/pgoutput/*.c")
list(REMOVE_ITEM FLEX_POSTGRES_SRCS ${FLEX_POSTGRES_REPLICATION_PGOUTPUT_SRCS})
file(GLOB_RECURSE FLEX_POSTGRES_POSTMASTER_SRCS "${FLEX_POSTGRES_BACKEND_POSTMASTER_SRC_DIR}/*.c")
file(GLOB_RECURSE FLEX_POSTGRES_ACCESS_SRCS "${FLEX_POSTGRES_BACKEND_ACCESS_SRC_DIR}/*.c")
file(GLOB_RECURSE FLEX_POSTGRES_STORAGE_SRCS "${FLEX_POSTGRES_BACKEND_STORAGE_SRC_DIR}/*.c")
file(GLOB_RECURSE FLEX_POSTGRES_UTILS_SRCS "${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/*.c")
# exclude wait_event_funcs_data.c from FLEX_POSTGRES_UTILS_SRCS
list(REMOVE_ITEM FLEX_POSTGRES_UTILS_SRCS ${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/activity/wait_event_funcs_data.c)
list(REMOVE_ITEM FLEX_POSTGRES_UTILS_SRCS ${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/adt/levenshtein.c)
list(REMOVE_ITEM FLEX_POSTGRES_UTILS_SRCS ${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/adt/like_match.c)
# remove all files under ${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/mb/
file(GLOB FLEX_POSTGRES_UTILS_MB_SRCS "${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/mb/**/*.c")
list(REMOVE_ITEM FLEX_POSTGRES_UTILS_SRCS ${FLEX_POSTGRES_UTILS_MB_SRCS})
message(STATUS "FLEX_POSTGRES_UTILS_SRCS: ${FLEX_POSTGRES_UTILS_SRCS}")
# remove all files under directory postgres/src/backend/utils/mb/conversion_procs/, include the subdires
file(GLOB_RECURSE FLEX_POSTGRES_UTILS_MB_CONVERSION_PROCS_SRCS "${FLEX_POSTGRES_BACKEND_UTILS_SRC_DIR}/mb/conversion_procs/**/*.c")
list(REMOVE_ITEM FLEX_POSTGRES_UTILS_SRCS ${FLEX_POSTGRES_UTILS_MB_CONVERSION_PROCS_SRCS})


# exlude adt/*.c from FLEX_POSTGRES_UTILS_SRCS


# exclude libpqwalreceiver.c
list(REMOVE_ITEM FLEX_POSTGRES_SRCS ${FLEX_POSTGRES_BACKEND_REPLICATION_SRC_DIR}/libpqwalreceiver/libpqwalreceiver.c)
message(STATUS "FLEX_POSTGRES_SRCS: ${FLEX_POSTGRES_SRCS}")

# add customized target to execut ./configure --without-readline and make -j
add_custom_command(
        OUTPUT ${FLEX_POSTGRES_DIR}/GNUmakefile
        COMMAND ./configure --without-readline
        WORKING_DIRECTORY ${FLEX_POSTGRES_DIR}
        DEPENDS ${FLEX_POSTGRES_DIR}/configure
        COMMENT "Configuring flex_postgres"
        VERBATIM
)
add_custom_target(flex_postgres_configure
        DEPENDS ${FLEX_POSTGRES_DIR}/GNUmakefile
)
add_custom_command(
        OUTPUT ${FLEX_POSTGRES_BACKEND_SRC_DIR}/postgres
        COMMAND make -j
        WORKING_DIRECTORY ${FLEX_POSTGRES_DIR}
        DEPENDS flex_postgres_configure
        COMMENT "Building flex_postgres"
)
add_custom_target(flex_postgres_make
        DEPENDS ${FLEX_POSTGRES_BACKEND_SRC_DIR}/postgres
)
add_library(flex_postgres SHARED ${FLEX_POSTGRES_SRCS} ${FLEX_POSTGRES_POSTMASTER_SRCS} ${FLEX_POSTGRES_ACCESS_SRCS} ${FLEX_POSTGRES_STORAGE_SRCS} ${FLEX_POSTGRES_UTILS_SRCS})
target_compile_options(flex_postgres PRIVATE -std=gnu99)
add_dependencies(flex_postgres flex_postgres_make)

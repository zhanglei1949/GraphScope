<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2021 Alibaba Group Holding Ltd.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.alibaba.graphscope</groupId>
    <artifactId>grape-jdk-parent</artifactId>
    <version>0.1</version>
  </parent>

  <artifactId>grape-jdk</artifactId>
  <version>0.1</version>
  <packaging>jar</packaging>
  <name>grape-jdk</name>

  <properties>
    <alibaba-grape-sdk.version>0.1</alibaba-grape-sdk.version>
    <jacoco.version>0.8.7</jacoco.version>
    <jni.library.name>grape-jni</jni.library.name>
    <jni.library.path>${project.basedir}/target/native/</jni.library.path>
    <maven.javadoc.version>3.3.1</maven.javadoc.version>
    <skip.perf.benchmarks>false</skip.perf.benchmarks>
    <benchmark.filter>org.apache.hadoop.*</benchmark.filter>
    <benchmark.forks>1</benchmark.forks>
    <benchmark.jvmargs></benchmark.jvmargs>
    <benchmark.warmups>5</benchmark.warmups>
    <benchmark.runs>5</benchmark.runs>
    <benchmark.list></benchmark.list>
    <benchmark.resultfile>jmh-result.json</benchmark.resultfile>
    <benchmark.resultformat>json</benchmark.resultformat>
    <uberjar.name>uberjar</uberjar.name>
    <benchmark.jvmargs>-Djava.library.path=${project.build.directory}/native -XX:CompileCommandFile=/home/graphscope/compile-commands.txt</benchmark.jvmargs>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.fastffi</groupId>
      <artifactId>ffi</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba.fastffi</groupId>
      <artifactId>annotation-processor</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <!--    not used in code but needed at runtime,-->
    <dependency>
      <groupId>com.alibaba.fastffi</groupId>
      <artifactId>llvm4jni-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoop-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <version>${jmh.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.version}</version>
        <configuration>
          <reportOutputDirectory>${javadoc.output.directory}</reportOutputDirectory>
          <destDir>${javadoc.output.destDir}</destDir>
          <locale>en_US</locale>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.openjdk.jmh</groupId>
              <artifactId>jmh-generator-annprocess</artifactId>
              <version>${jmh.version}</version>
            </path>
            <path>
              <groupId>com.alibaba.fastffi</groupId>
              <artifactId>annotation-processor</artifactId>
              <version>0.1</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>make</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <target>
                <ant antfile="${basedir}/build.xml">
                  <target name="giraph-jni"></target>
                </ant>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <dataFile>target/jacoco.exec</dataFile>
              <outputDirectory>target/jacoco.out</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <skip>${skip.perf.benchmarks}</skip>
          <classpathScope>test</classpathScope>
         <executable>java</executable>
          <arguments>
		<argument>-classpath</argument>
                  <argument>${env.myclasspath}</argument>
            <argument>org.openjdk.jmh.Main</argument>
            <argument>${benchmark.filter}</argument>
            <argument>-f</argument>
            <argument>${benchmark.forks}</argument>
            <argument>-jvmArgs</argument>
            <argument>${benchmark.jvmargs}</argument>
            <argument>-wi</argument>
            <argument>${benchmark.warmups}</argument>
            <argument>-i</argument>
            <argument>${benchmark.runs}</argument>
            <argument>-rff</argument>
            <argument>${benchmark.resultfile}</argument>
            <argument>-rf</argument>
            <argument>${benchmark.resultformat}</argument>
          </arguments>
        </configuration>
        <executions>
          <execution>
            <id>run-java-benchmarks</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
